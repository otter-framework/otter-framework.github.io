<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Case Study on</title><link>https://doks-child-theme.netlify.app/docs/case-study/</link><description>Recent content in Case Study on</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Tue, 06 Oct 2020 08:48:45 +0000</lastBuildDate><atom:link href="https://doks-child-theme.netlify.app/docs/case-study/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction</title><link>https://doks-child-theme.netlify.app/docs/case-study/introduction/</link><pubDate>Tue, 06 Oct 2020 08:48:57 +0000</pubDate><guid>https://doks-child-theme.netlify.app/docs/case-study/introduction/</guid><description>Otter is a drop-in, serverless solution that facilitates peer-to-peer video communication within web applications. It can be deployed to AWS with a single command, and is ideal for existing web applications with real-time video communication needs.
For an application developer, Otter abstracts away the complexity of establishing a resilient, scalable infrastructure, and provides a simple way to integrate peer-to-peer WebRTC video calling into an application.
In this case study, we will dive into Otter and explore how we built it and the design decisions and technical challenges we faced along the way.</description></item><item><title>How WebRTC Works</title><link>https://doks-child-theme.netlify.app/docs/case-study/web-rtc/</link><pubDate>Tue, 06 Oct 2020 08:48:57 +0000</pubDate><guid>https://doks-child-theme.netlify.app/docs/case-study/web-rtc/</guid><description>How do peers connect? #
Letâ€™s look at a high-level workflow of how a direct connection can be established between two peers. We will use an analogy of a peer Alice sending physical mail to another peer Bob.
How does Alice know where to address her mail to?
Alice will need some mechanism to exchange addresses with Bob to facilitate the delivery, which is known as signaling. This could be a text message or even a pigeon carrier.</description></item></channel></rss>